<project default="run.director">
  <target name="help">
    <echo>

    ABOUT

    Uses p2.director to install 1 or more IUs from given URL(s) (sourceSites) into a specified eclipse install folder (targetDir).

    COMMANDLINE PARAMS
    
    install - csv list of features to install
    
    sourceSites - csv list of URLs from which to install
    
    targetDir - /full/path/to/an/existing/jbdevstudio/eclipse; folder must exist
    
    RUNNING THIS SCRIPT

    This example will install JBoss Tools (Central only) and support for Maven:
    
    /path/to/eclipse-dir/eclipse -consolelog -nosplash -data /tmp -application org.eclipse.ant.core.antRunner \
          -f /path/to/director.xml \
      -DsourceSites=http://download.jboss.org/jbosstools/updates/stable/kepler/,http://download.jboss.org/jbosstools/targetplatforms/jbosstoolstarget/kepler/ \
      -DtargetDir=/path/to/eclipse-dir/ \
      -Dinstall=org.jboss.tools.maven.feature.feature.group,org.jboss.tools.community.central.feature.feature.group

</echo>
  </target>

  <property name="install" value="" />
  <property name="sourceSites" value="" />
  <property name="targetDir" value="" />

  <target name="setup">
    <property name="p2.director.extraArgs" value="" />
    <property name="p2.director.installIU" value="${install}" />
    <property name="p2.director.install.path" value="${targetDir}" />
    <property name="p2.director.input.repo" value="${sourceSites}" />

    <!-- find profile folder: should only find one or this won't work -->
    <dirset id="profileDirs" dir="${p2.director.install.path}/p2/org.eclipse.equinox.p2.engine/profileRegistry" includes="**/*profile"/>
    <property name="profileDir" refid="profileDirs"/>
    <!-- from epp.package.jee.profile, get epp.package.jee; if more than one profile found, just pick the last one -->
    <basename file="${profileDir}" property="profileName"/>
      <script language="javascript"> <![CDATA[ 
        pns = project.getProperty("profileName").split(";"); pn = pns[pns.length-1]; pn = pn.replace(".profile",""); project.setProperty("profileName",pn);
      ]]> </script>
    <mkdir dir="${p2.director.install.path}" />
    <chmod perm="ugo+rwx" file="${p2.director.install.path}/eclipse" />
  </target>

  <target name="run.director" depends="setup">
    <echo>Profile Name: ${profileName}
Install Path: ${p2.director.install.path}
Source Sites: ${p2.director.input.repo}
IUS to Install:
${install}
</echo>
    <exec executable="${p2.director.install.path}/eclipse" failonerror="true" dir="${p2.director.install.path}" timeout="1200000" taskname="p2.dir">
      <!-- deprecated application for Eclipse 3.4: org.eclipse.equinox.p2.director.app.application -->
      <arg line=" -application org.eclipse.equinox.p2.director" />
      <arg line=" -clean -nosplash" />
      <arg line=" --launcher.suppressErrors" />
      <arg line=" -consoleLog" />
      <arg line=" -flavor tooling" />
      <!-- suspect this is not needed <arg line=" -roaming" /> -->
      <arg line=" -profile ${profileName}" />
      <arg line=" -destination ${p2.director.install.path}" />
      <arg line=" -bundlepool ${p2.director.install.path}" />
      <arg line=" -installIU ${p2.director.installIU}" />
      <arg line=" -metadataRepository ${p2.director.input.repo}"/>
      <arg line=" -artifactRepository ${p2.director.input.repo},file:${p2.director.install.path}" />
      <arg line=" -profileProperties org.eclipse.update.install.features=true" />
      <arg line=" -vmargs" />
      <!-- this appears to cause: 'The copies of profile epp.package.jee are not in sync' <arg line=" -Declipse.p2.data.area=${p2.director.install.path}/p2" /> -->
      <arg line=" -Declipse.p2.MD5Check=false" />
    </exec>
  </target>

  <!-- helper task used to collect a list of all the feature.group IUs for given repo(s) in ${p2.director.input.repo}, rather than defining a list with -Dinstall 
      output file will contain feature.group=version properties like this:
        org.jboss.ide.eclipse.archives.feature.feature.group=3.5.0.Alpha2-v20140320-0228-B463
      You can then parse the output into a CSV list of feature.groups like this:

      #!/bin/bash
      BASE_IUs=""
      if [[ -f ${WORKSPACE}/feature.groups.properties ]]; then 
        FEATURES=`cat ${WORKSPACE}/feature.groups.properties | grep ".feature.group=" | sed "s#\(.\+.feature.group\)=.\+#\1#" | sort | uniq`
        for f in $FEATURES; do BASE_IUs="${BASE_IUs},${f}"; done; BASE_IUs=${BASE_IUs:1}
      fi

      See also: https://github.com/jbosstools/jbosstools-build-ci/blob/master/util/installFromCentral.sh
  -->
  <target name="list.feature.groups" depends="setup">
    <antcall target="list.ius">
      <param name="liststring" value="-list Q:group"/>
    </antcall>
  </target>
  <!-- Like list.feature.groups, but this will return a list of plugins, EXCLUDING platform-specific fragments like 
       org.eclipse.equinox.launcher.gtk.aix.ppc64 or org.eclipse.equinox.executable_root.gtk.linux.s390x 
       Ref: http://stackoverflow.com/questions/18082719/command-line-to-find-units-in-a-p2-repository-using-p2-query-languange

       See also: https://github.com/jbosstools/jbosstools-build-ci/blob/master/util/installFromTarget.sh
  -->
  <target name="list.plugins" depends="setup">
    <antcall target="list.ius">
      <param name="liststring" value="-list 'Q:everything.select(y | everything.select(x | x.properties ~= filter(&quot;(org.eclipse.equinox.p2.bundle.localization='plugin')&quot;)).collect(x | x.requirements).flatten().exists(r | y ~= r))'"/>
    </antcall>
  </target>
  <target name="list.ius" depends="setup">
    <property name="liststring" value="   -list "/>
    <echo>Searching for IUs in ${p2.director.input.repo} with ${liststring} ...</echo>
    <exec executable="${p2.director.install.path}/eclipse" failonerror="true" timeout="1200000" taskname="list" output="${output}" logerror="false">
      <arg line=" -application org.eclipse.equinox.p2.director" />
      <arg line=" -clean -nosplash" />
      <arg line=" --launcher.suppressErrors" />
      <arg line=" -consoleLog" />
      <arg line=" -flavor tooling" />
      <!-- suspect this is not needed <arg line=" -roaming" /> -->
      <arg line=" -profile ${profileName}" />
      <arg line=" -destination ${p2.director.install.path}" />
      <arg line=" -bundlepool ${p2.director.install.path}" />
      <arg line=" ${liststring}" />
      <arg line=" -metadataRepository ${p2.director.input.repo}"/>
      <arg line=" -artifactRepository ${p2.director.input.repo},file:${p2.director.install.path}" />
      <arg line=" -profileProperties org.eclipse.update.install.features=true" />
      <arg line=" -vmargs" />
      <!-- this appears to cause: 'The copies of profile epp.package.jee are not in sync' <arg line=" -Declipse.p2.data.area=${p2.director.install.path}/p2" /> -->
      <arg line=" -Declipse.p2.MD5Check=false" />
    </exec>
    <echo>IU list written to ${output}</echo>
  </target>

  <!-- helper task used to perform any arbitrary XSL transform. Usage: 
      ${ECLIPSE}/eclipse -consolelog -nosplash -data ${WORKSPACE}/data -application org.eclipse.ant.core.antRunner -f ${WORKSPACE}/director.xml \
      transform -Dxslt=${WORKSPACE}/get-ius-and-siteUrls.xsl -Dinput=${WORKSPACE}/plugin.xml -Doutput=${WORKSPACE}/plugin.transformed.xml

      See also: https://github.com/jbosstools/jbosstools-build-ci/blob/master/util/installFromCentral.sh
  -->
  <target name="transform"><xslt style="${xslt}" in="${input}" out="${output}"/></target>
</project>
